openapi: 3.0.0
info:
  title:   Customer Payment API
  version: '1.0.0'
  description: API for managing customer payments in the Makani system
components:
  schemas:
    BasePayment:
      type: object
      properties:
        paymentDate:
          type: string
          format: date
          description: Date of the payment
        amount:
          type: number
          format: double
          description: Amount of the payment
        paymentMethod:
          type: string
          maxLength: 25
          description: Method of payment (e.g., cash, card)
      required:
        - paymentDate
        - amount
        - paymentMethod
    PaymentAdultStudentCreationRequest:
      allOf:
        - $ref: '#/components/schemas/BasePayment'
        - type: object
          properties:
            membershipAdultStudentId:
              type: integer
              description: ID of the associated adult student membership
      required:
        - paymentDate
        - amount
        - paymentMethod
        - membershipAdultStudentId
    PaymentAdultStudentCreationResponse:
      type: object
      properties:
        paymentAdultStudentId:
          type: integer
          readOnly: true
          description: Adult student payment ID
      required:
        - paymentAdultStudentId
    GetPaymentAdultStudentResponse:
      allOf:
        - $ref: '#/components/schemas/BasePayment'
        - type: object
          properties:
            paymentAdultStudentId:
              type: integer
              readOnly: true
              description: Adult student payment ID
            membershipAdultStudentId:
              type: integer
              description: ID of the associated adult student membership
      required:
        - paymentAdultStudentId
        - paymentDate
        - amount
        - paymentMethod
        - membershipAdultStudentId
    PaymentTutorCreationRequest:
      allOf:
        - $ref: '#/components/schemas/BasePayment'
        - type: object
          properties:
            membershipTutorId:
              type: integer
              description: ID of the associated tutor membership
      required:
        - paymentDate
        - amount
        - paymentMethod
        - membershipTutorId
    PaymentTutorCreationResponse:
      type: object
      properties:
        paymentTutorId:
          type: integer
          readOnly: true
          description: Tutor payment ID
      required:
        - paymentTutorId
    GetPaymentTutorResponse:
      allOf:
        - $ref: '#/components/schemas/BasePayment'
        - type: object
          properties:
            paymentTutorId:
              type: integer
              readOnly: true
              description: Tutor payment ID
            membershipTutorId:
              type: integer
              description: ID of the associated tutor membership
      required:
        - paymentTutorId
        - paymentDate
        - amount
        - paymentMethod
        - membershipTutorId
    ErrorResponse:
      type: object
      properties:
        statusCode:
          type: integer
          description: HTTP status code of the error
        message:
          type: string
          description: A user-friendly error message
      required:
        - statusCode
        - message
paths:
  '/paymentAdultStudents':
    post:
      summary: Create a new adult student payment
      operationId: createPaymentAdultStudent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAdultStudentCreationRequest'
      responses:
        '201':
          description: Adult student payment created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAdultStudentCreationResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: Get all adult student payments
      operationId: getPaymentAdultStudents
      responses:
        '200':
          description: List of adult student payments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetPaymentAdultStudentResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/paymentAdultStudents/{paymentAdultStudentId}':
    get:
      summary: Get an adult student payment by ID
      operationId: getPaymentAdultStudentById
      parameters:
        - name: paymentAdultStudentId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the adult student payment to retrieve
      responses:
        '200':
          description: Adult student payment details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPaymentAdultStudentResponse'
        '404':
          description: Adult student payment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update an adult student payment
      operationId: updatePaymentAdultStudent
      parameters:
        - name: paymentAdultStudentId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the adult student payment to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAdultStudentCreationRequest'
      responses:
        '200':
          description: Adult student payment updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAdultStudentCreationResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Adult student payment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete an adult student payment
      operationId: deletePaymentAdultStudent
      parameters:
        - name: paymentAdultStudentId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the adult student payment to delete
      responses:
        '204':
          description: Adult student payment deleted successfully
        '404':
          description: Adult student payment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/paymentTutors':
    post:
      summary: Create a new tutor payment
      operationId: createPaymentTutor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTutorCreationRequest'
      responses:
        '201':
          description: Tutor payment created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTutorCreationResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: Get all tutor payments
      operationId: getPaymentTutors
      responses:
        '200':
          description: List of tutor payments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetPaymentTutorResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/paymentTutors/{paymentTutorId}':
    get:
      summary: Get a tutor payment by ID
      operationId: getPaymentTutorById
      parameters:
        - name: paymentTutorId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the tutor payment to retrieve
      responses:
        '200':
          description: Tutor payment details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPaymentTutorResponse'
        '404':
          description: Tutor payment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update a tutor payment
      operationId: updatePaymentTutor
      parameters:
        - name: paymentTutorId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the tutor payment to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTutorCreationRequest'
      responses:
        '200':
          description: Tutor payment updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTutorCreationResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Tutor payment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a tutor payment
      operationId: deletePaymentTutor
      parameters:
        - name: paymentTutorId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the tutor payment to delete
      responses:
        '204':
          description: Tutor payment deleted successfully
        '404':
          description: Tutor payment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'