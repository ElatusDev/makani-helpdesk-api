openapi: 3.0.0
info:
  title:   Customer Services API
  version: '1.0.0'
  description: API for managing customers in the Makani system
paths:
  '/adultStudents':
    get:
      summary: Retrieve a list of adult students
      operationId: getAdultStudents
      responses:
        '200':
          description: A list of adult students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetAdultStudentResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
    post:
      summary: Create a new adult student
      operationId: createAdultStudent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdultStudentCreationRequest'
      responses:
        '201':
          description: Adult student created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdultStudentCreationResponse'
        '400': # Changed from 409
          description: Invalid request data or Conflict - Adult student with provided email or phone already exists
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
  '/adultStudents/{adultStudentId}':
    get:
      summary: Retrieve an adult student by ID
      operationId: getAdultStudentById
      parameters:
        - name: adultStudentId
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the adult student to retrieve
      responses:
        '200':
          description: Adult student details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAdultStudentResponse'
        '404':
          description: Adult student not found
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
    delete: # DELETE for adult students
      summary: Delete an adult student by ID
      operationId: deleteAdultStudent
      parameters:
        - in: path
          name: adultStudentId
          schema:
            type: integer
          required: true
          description: ID of the adult student to delete
      responses:
        '204':
          description: Adult student deleted successfully (No Content)
        '404':
          description: Adult student not found
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
  '/minorStudents':
    get:
      summary: Retrieve a list of minor students
      operationId: getMinorStudents
      responses:
        '200':
          description: A list of minor students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetMinorStudentResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
    post:
      summary: Create a new minor student
      operationId: createMinorStudent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MinorStudentCreationRequest'
      responses:
        '201':
          description: Minor student created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinorStudentCreationResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
  '/minorStudents/{minorStudentId}':
    get:
      summary: Retrieve a minor student by ID
      operationId: getMinorStudentById
      parameters:
        - name: minorStudentId
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the minor student to retrieve
      responses:
        '200':
          description: Minor student details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMinorStudentResponse'
        '404':
          description: Minor student not found
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
    delete: # DELETE for minor students
      summary: Delete a minor student by ID
      operationId: deleteMinorStudent
      parameters:
        - in: path
          name: minorStudentId
          schema:
            type: integer
          required: true
          description: ID of the minor student to delete
      responses:
        '204':
          description: Minor student deleted successfully (No Content)
        '404':
          description: Minor student not found
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'

  '/tutors': # PATHS FOR TUTORS
    post:
      summary: Create a new tutor
      operationId: createTutor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TutorCreationRequest'
      responses:
        '201':
          description: Tutor created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TutorCreationResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
        '409': # For unique constraint violations (email, phone)
          description: Conflict - Tutor with provided email or phone already exists
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
    get:
      summary: Retrieve a list of tutors
      operationId: getTutors
      responses:
        '200':
          description: A list of tutors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetTutorResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'

  '/tutors/{tutorId}': # PATHS FOR INDIVIDUAL TUTOR
    get:
      summary: Retrieve a tutor by ID
      operationId: getTutorById
      parameters:
        - in: path
          name: tutorId
          schema:
            type: integer
          required: true
          description: ID of the tutor to retrieve
      responses:
        '200':
          description: Tutor retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTutorResponse'
        '404':
          description: Tutor not found
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a tutor by ID
      operationId: deleteTutor
      parameters:
        - in: path
          name: tutorId
          schema:
            type: integer
          required: true
          description: ID of the tutor to delete
      responses:
        '204':
          description: Tutor deleted successfully (No Content)
        '404':
          description: Tutor not found
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
components:
  schemas:
    BaseStudent:
      type: object
      description: 'Base schema for Student, used for referencing only. Do not generate a class for this schema.'
      properties:
        profilePicture:
          type: string
          format: byte
          description: Student's profile picture
        customerAuthId:
          type: integer
          description: Student's customer authentication ID
      required:
        - profilePicture
        - customerAuthId
    AdultStudent:
      allOf:
        - $ref: './commons.yaml#/components/schemas/BasePerson'
        - $ref: '#/components/schemas/BaseStudent'
    MinorStudent:
      allOf:
        - $ref: '#/components/schemas/BaseStudent'
        - type: object
          properties:
            tutorId: # FK to Tutor
              type: integer
              description: ID of the tutor associated with the minor student
          required:
            - tutorId
    BaseTutor: # BaseTutor for the object hierarchy
      type: object
      properties:
        # Properties from TutorDataModel
        firstName:
          type: string
          maxLength: 30
          description: Tutor's first name
        lastName:
          type: string
          maxLength: 30
          description: Tutor's last name
        email:
          type: string
          maxLength: 50
          format: email
          nullable: true # As per TutorDataModel
          description: Tutor's email address (unique)
        phone:
          type: string
          maxLength: 15
          description: Tutor's phone number (unique)
        customerAuthId: # Link to CustomerAuthDataModel by ID
          type: integer
          description: ID of the associated customer authentication record
      required:
        - firstName
        - lastName
        - phone
        - customerAuthId # email is optional, but other fields are mandatory
    CustomerAuth:
      type: object
      properties:
        customerAuthId:
          type: integer
          description: Customer authentication ID
        provider:
          type: string
          maxLength: 9
          description: Authentication provider (e.g., Google, Facebook)
        token:
          type: string
          format: byte
          description: Authentication token
      required:
        - customerAuthId
        - provider
        - token
    AdultStudentCreationRequest:
      allOf:
        - $ref: '#/components/schemas/AdultStudent'
        - type: object
          properties:
            auth:
              $ref: '#/components/schemas/CustomerAuth'
              description: Adult student's authentication details
      required:
        - auth
    AdultStudentCreationResponse:
      type: object
      properties:
        adultStudentId:
          type: integer
          readOnly: true
          description: Adult student ID
      required:
        - adultStudentId
    GetAdultStudentResponse:
      allOf:
        - $ref: '#/components/schemas/AdultStudent'
        - type: object
          properties:
            adultStudentId:
              type: integer
              readOnly: true
              description: Adult student ID
      required:
        - adultStudentId
    MinorStudentCreationRequest:
      allOf:
        - $ref: '#/components/schemas/MinorStudent'
        - type: object
          properties:
            minorStudentAuth:
              $ref: '#/components/schemas/CustomerAuth'
              description: Minor student's authentication details
            tutorAuth:
              $ref: '#/components/schemas/CustomerAuth'
              description: Tutor's authentication details
      required:
        - minorStudentAuth
        - tutorAuth
    MinorStudentCreationResponse:
      type: object
      properties:
        minorStudentId:
          type: integer
          readOnly: true
          description: Minor student ID
      required:
        - minorStudentId
    GetMinorStudentResponse:
      allOf:
        - $ref: '#/components/schemas/MinorStudent'
        - type: object
          properties:
            minorStudentId:
              type: integer
              readOnly: true
              description: Minor student ID
      required:
        - minorStudentId
    # Tutor Schemas (renamed to align with BaseTutor)
    TutorCreationRequest:
      allOf:
        - $ref: '#/components/schemas/BaseTutor' # Now extends BaseTutor
    TutorCreationResponse:
      type: object
      properties:
        tutorId:
          type: integer
          readOnly: true
          description: Unique identifier for the tutor
      required:
        - tutorId
    GetTutorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseTutor' # Now extends BaseTutor
        - type: object
          properties:
            tutorId:
              type: integer
              readOnly: true
              description: Unique identifier for the tutor
          required:
            - tutorId
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Error message
      required:
        - message