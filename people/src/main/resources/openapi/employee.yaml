openapi: 3.0.0
info:
  title:   Employee Services API
  version: '1.0.0'
  description: API for managing people in the Makani system
paths:
  '/employees':
    post:
      operationId: createEmployee
      summary: Create a new employee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCreationRequest'
      responses:
        '201':
          description: Employee created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeCreationResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
        '404':
          description: Employee not found
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
    get:
      summary: Retrieve a list of employees
      operationId: getEmployees
      responses:
        '200':
          description: A list of employees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetEmployeeResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
  '/employees/{employeeId}':
    get:
      summary: Retrieve an employee by ID
      operationId: getEmployeeById
      parameters:
        - in: path
          name: employeeId
          schema:
            type: integer
          required: true
          description: ID of the employee to retrieve
      responses:
        '200':
          description: Employee retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEmployeeResponse'
        '404':
          description: Employee not found
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
    delete:
      summary: Delete an employee by ID
      operationId: deleteEmployeeById
      parameters:
        - in: path
          name: employeeId
          schema:
            type: integer
          required: true
          description: ID of the employee to delete
      responses:
        '204':
          description: Employee deleted successfully
          content:
            application/json:
              schema:
                type: string
              required: true
              description: deletion confirmation
        '404':
          description: Employee not found
          content:
            application/json:
              schema:
                type: string
              required: true
              description: employee to be deleted was not found
        '422':
          description: Employee deletion not allowed
          content:
            application/json:
              schema:
                type: string
              required: true
              description: employee cannot be delete, it already has been associated with other records
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: './commons.yaml#/components/schemas/ErrorResponse'
components:
  schemas:
    EmployeeCreationRequest:
      allOf:
        - $ref: './commons.yaml#/components/schemas/BasePerson'
        - type: object
          properties:
            employeeAuth:
              $ref: './commons.yaml#/components/schemas/InternalAuth'
    EmployeeCreationResponse:
      type: object
      properties:
        employeeId:
          type: integer
          readOnly: true
          description: Employee ID
      required:
        - employeeId
    GetEmployeeResponse:
      allOf:
        - $ref: './commons.yaml#/components/schemas/BasePerson'
        - type: object
          properties:
            employeeId:
              type: integer
              description: Employee ID