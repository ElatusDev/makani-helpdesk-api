openapi: 3.0.0
info:
  title:  Course Entity
  version: '1.0.0'
  description: API for courses
paths:
  '/courses':
    post:
      operationId: createCourse
      summary: Create a new course
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseCreationRequest'
      responses:
        '201':
          description: Course created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseCreationResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: Get all courses
      operationId: getCourses
      responses:
        '200':
          description: List of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetCourseResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/courses/{courseId}':
    get:
      operationId: getCourseById
      summary: Get a course by ID
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Course details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCourseResponse'
        '404':
          description: Course not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteCourseById
      summary: Delete a course
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Course deleted successfully
        '404':
          description: Course not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    BaseCourse:
      type: object
      properties:
        name:
          type: string
          maxLength: 50
        description:
          type: string
          maxLength: 200
        maxCapacity:
          type: integer
        timeTableIds:
          type: array
          items:
            type: integer
        availableCollaboratorIds:
          type: array
          items:
            type: integer
      required:
        - name
        - description
        - maxCapacity
        - timeTableIds
        - availableCollaboratorIds
    CourseCreationRequest:
      allOf:
        - $ref: '#/components/schemas/BaseCourse'
    CourseCreationResponse:
      type: object
      properties:
        courseId:
          type: integer
          readOnly: true
      required:
        - courseId
    GetCourseResponse:
      allOf:
        - $ref: '#/components/schemas/BaseCourse'
        - type: object
          properties:
            courseId:
              type: integer
              readOnly: true
          required:
            - courseId
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
      required:
        - message